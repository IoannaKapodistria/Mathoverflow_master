{"remainingRequest":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\unanswered_questions.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\unanswered_questions.vue","mtime":1665858878906},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQppbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyJzsNCmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsNCmltcG9ydCBWdWUgZnJvbSAndnVlJw0KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOw0KaW1wb3J0IHsgZ2V0UXVlc3Rpb24sIGdldFF1ZXN0aW9ucywgZ2V0VXNlcnMgfSBmcm9tICcuL2Z1bmN0aW9ucycNCmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoew0KICAgIGRhdGE6ICgpID0+ICh7DQogICAgICAgIGFkbWluOiB0cnVlLA0KICAgICAgICBzZWFyY2g6ICIiLA0KICAgICAgICBxdWVzdGlvbnNDb2xzOiBbeyB0ZXh0OiAiQW5zd2VycyIsIGFsaWduOiAnc3RhcnQnLCBzb3J0YWJsZTogdHJ1ZSwgdmFsdWU6ICdhbnN3ZXJzJyB9LCB7IHRleHQ6ICJWb3RlcyIsIGFsaWduOiAnc3RhcnQnLCBzb3J0YWJsZTogdHJ1ZSwgdmFsdWU6ICd2b3RlcycgfSwgeyB0ZXh0OiAiUXVlc3Rpb24iLCBhbGlnbjogJ3N0YXJ0Jywgc29ydGFibGU6IHRydWUsIHZhbHVlOiAndGl0bGUnIH0sIHsNCiAgICAgICAgICAgIHRleHQ6ICdVc2VyJywNCiAgICAgICAgICAgIGFsaWduOiAnc3RhcnQnLA0KICAgICAgICAgICAgc29ydGFibGU6IHRydWUsDQogICAgICAgICAgICB2YWx1ZTogJ3VzZXInDQogICAgICAgIH0sIHsgdGV4dDogImlkIiwgYWxpZ246ICdkLW5vbmUnLCBzb3J0YWJsZTogZmFsc2UsIHZhbHVlOiAncXVlc3Rpb25faWQnIH0sIHsgdGV4dDogIiIsIGFsaWduOiAnY2VudGVyJywgc29ydGFibGU6IGZhbHNlLCB2YWx1ZTogJ3JlbW92ZScgfV0sDQogICAgICAgIHF1ZXN0aW9uczogW10gYXMgYW55W10sDQogICAgfSksDQogICAgY29tcHV0ZWQ6IHsNCiAgICAgICAgLi4ubWFwR2V0dGVycyhbImdldFF1ZXN0aW9ucyIsICJnZXRVc2VycyJdKSwNCg0KICAgICAgICAvLyBhc3luYyBxdWVzdGlvbnNJdGVtcygpIHsNCiAgICAgICAgLy8gICAgIGxldCBxdWVzdGlvbnMgPSBbXSBhcyBhbnlbXTsNCiAgICAgICAgLy8gICAgIC8vIGNvbnNvbGUubG9nKHZhbHVlLCAidmFsdWUgb2YgZ2V0IHF1ZXN0aW9ucyIpOw0KICAgICAgICAvLyAgICAgZm9yIChjb25zdCBxdWVzdGlvbiBvZiB0aGlzLmdldFF1ZXN0aW9ucykgew0KICAgICAgICAvLyAgICAgICAgIGNvbnN0IHF1ZXN0aW9uRGF0YSA9IGF3YWl0IGdldFF1ZXN0aW9uKHF1ZXN0aW9uLnF1ZXN0aW9uX2lkKTsNCiAgICAgICAgLy8gICAgICAgICBjb25zdCBhbnN3ZXJzID0gcXVlc3Rpb25EYXRhLmFuc3dlcnM7DQogICAgICAgIC8vICAgICAgICAgY29uc3QgYW5zd2Vyc051bWJlciA9IGFuc3dlcnMubGVuZ3RoOw0KICAgICAgICAvLyAgICAgICAgIGNvbnN0IHF1ZXN0aW9uT2JqZWN0ID0geyBhbnN3ZXJzOiBhbnN3ZXJzTnVtYmVyLCB2b3RlczogIjEwIiwgdGl0bGU6IHF1ZXN0aW9uLnRpdGxlLCB1c2VyOiAiSW9hbm5hIiwgcXVlc3Rpb25faWQ6cXVlc3Rpb24ucXVlc3Rpb25faWQgfTsNCiAgICAgICAgLy8gICAgICAgICBxdWVzdGlvbnMucHVzaChxdWVzdGlvbk9iamVjdCk7DQogICAgICAgIC8vICAgICAgICAgY29uc29sZS5sb2cocXVlc3Rpb25zLCAidGhlc2UgYXJlIHF1ZXN0aW9ucyIpDQogICAgICAgIC8vICAgICB9DQogICAgICAgIC8vICAgICByZXR1cm4gcXVlc3Rpb25zOw0KICAgICAgICAvLyB9LA0KICAgICAgICBjb21wdXRlZEhlYWRlcnMoKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5xdWVzdGlvbnNDb2xzLmZpbHRlcih3b3JkID0+IHdvcmQudmFsdWUgIT09ICJxdWVzdGlvbl9pZCIpDQogICAgICAgIH0NCiAgICB9LA0KICAgIHdhdGNoOiB7DQogICAgICAgIGFzeW5jIGdldFF1ZXN0aW9ucyh2YWx1ZTogYW55KSB7DQogICAgICAgICAgICBsZXQgdW5hbnN3ZXJlZFF1ZXN0aW9uc0FycmF5ID0gW10gYXMgYW55W107DQogICAgICAgICAgICBjb25zb2xlLmxvZyh2YWx1ZSwgInZhbHVlIG9mIGdldCBxdWVzdGlvbnMiKTsNCiAgICAgICAgICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgZ2V0VXNlcnMoKTsNCiAgICAgICAgICAgIGZvciAoY29uc3QgcXVlc3Rpb24gb2YgdmFsdWUpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBxdWVzdGlvbkRhdGEgPSBhd2FpdCBnZXRRdWVzdGlvbihxdWVzdGlvbi5xdWVzdGlvbl9pZCk7DQogICAgICAgICAgICAgICAgY29uc3QgYW5zd2VycyA9IHF1ZXN0aW9uRGF0YS5hbnN3ZXJzOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFuc3dlcnNOdW1iZXIgPSBhbnN3ZXJzLmxlbmd0aDsNCiAgICAgICAgICAgICAgICBpZiAoYW5zd2Vyc051bWJlciA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICAvLyBmb3IgKGNvbnN0IHVzZXIgb2YgdXNlcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8gICAgIGlmICh1c2VyLnVzZXJfaWQgPT09IHF1ZXN0aW9uLlVzZXJVc2VySWQpIHsNCg0KICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIGNvbnN0IHF1ZXN0aW9uT2JqZWN0ID0geyBhbnN3ZXJzOiBhbnN3ZXJzTnVtYmVyLCB2b3RlczogIjEyIiwgdGl0bGU6IHF1ZXN0aW9uLnRpdGxlLCB1c2VyOiB1c2VyLnVzZXJuYW1lLCBxdWVzdGlvbl9pZDogcXVlc3Rpb24ucXVlc3Rpb25faWQgfTsNCiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB1bmFuc3dlcmVkUXVlc3Rpb25zQXJyYXkucHVzaChxdWVzdGlvbk9iamVjdCk7DQogICAgICAgICAgICAgICAgICAgIC8vICAgICB9DQogICAgICAgICAgICAgICAgICAgIC8vIH0NCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgdm90ZXMgPSBxdWVzdGlvbkRhdGEudm90ZXM7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHZvdGVzQXJyYXk6IGFueVtdID0gW10NCiAgICAgICAgICAgICAgICAgICAgLy9jYWxjdWxhdGUgdm90ZXMNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCB2b3RlIG9mIHZvdGVzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHZvdGUudmFsdWUNCiAgICAgICAgICAgICAgICAgICAgICAgIHZvdGVzQXJyYXkucHVzaCh2YWx1ZSkNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAvL2dldCB0aGUgc3VtDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHZvdGVzU3VtID0gdm90ZXNBcnJheS5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBhbnN3ZXJzTnVtYmVyID0gYW5zd2Vycy5sZW5ndGg7DQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdXNlciBvZiB1c2Vycykgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXIudXNlcl9pZCA9PT0gcXVlc3Rpb24uVXNlclVzZXJJZCkgew0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcXVlc3Rpb25PYmplY3QgPSB7IGFuc3dlcnM6IGFuc3dlcnNOdW1iZXIsIHZvdGVzOiB2b3Rlc1N1bSwgdGl0bGU6IHF1ZXN0aW9uLnRpdGxlLCB1c2VyOiB1c2VyLnVzZXJuYW1lLCBxdWVzdGlvbl9pZDogcXVlc3Rpb24ucXVlc3Rpb25faWQgfTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmFuc3dlcmVkUXVlc3Rpb25zQXJyYXkucHVzaChxdWVzdGlvbk9iamVjdCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBjb25zb2xlLmxvZyh1bmFuc3dlcmVkUXVlc3Rpb25zQXJyYXksICJ0aGlzLiBxdWVzdGlvbnNBcnJheSIpDQogICAgICAgICAgICB0aGlzLnF1ZXN0aW9ucyA9IHVuYW5zd2VyZWRRdWVzdGlvbnNBcnJheTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMucXVlc3Rpb25zLCAidGhpcy4gcXVlc3Rpb25zIikNCiAgICAgICAgfSwNCiAgICAgICAgZ2V0VXNlcnModmFsdWU6IGFueSkgew0KICAgICAgICAgICAgY29uc29sZS5sb2codmFsdWUsICJ0aGVzZSBhcmUgdGhlIHVzZXJzIik7DQoNCiAgICAgICAgfQ0KICAgIH0sDQoNCiAgICBtZXRob2RzOiB7DQogICAgICAgIGFzeW5jIGhhbmRsZUNsaWNrKHZhbHVlOiBhbnkpIHsNCiAgICAgICAgICAgIC8vIHJvdXRlci5wdXNoKCcvcXVlc3Rpb24nKQ0KICAgICAgICAgICAgY29uc29sZS5sb2codmFsdWUsICJ0aGUgdmFsdWUiKTsNCiAgICAgICAgICAgIGNvbnN0IHF1ZXN0aW9uSWQgPSB2YWx1ZS5xdWVzdGlvbl9pZDsNCiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvcXVlc3Rpb24nKTsNCiAgICAgICAgICAgIGNvbnN0IHF1ZXN0aW9uRGF0YSA9IGF3YWl0IGdldFF1ZXN0aW9uKHF1ZXN0aW9uSWQpOw0KICAgICAgICAgICAgY29uc29sZS5sb2cocXVlc3Rpb25EYXRhLCAidGhlIHJvdyBkYXRhIik7DQogICAgICAgICAgICBzdG9yZS5jb21taXQoInNldFF1ZXN0aW9uRGF0YSIsIHF1ZXN0aW9uRGF0YSkNCiAgICAgICAgfSwNCiAgICAgICAgYXN5bmMgZ2V0VXNlcnNOYW1lcygpIHsNCiAgICAgICAgICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgZ2V0VXNlcnMoKTsNCiAgICAgICAgfQ0KICAgIH0sDQogICAgYXN5bmMgbW91bnRlZCgpIHsNCiAgICAgICAgZ2V0UXVlc3Rpb25zKCk7DQogICAgICAgIHRoaXMuZ2V0UXVlc3Rpb25zOw0KICAgICAgICB0aGlzLmdldFVzZXJzOw0KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmdldFVzZXJzLCAiVEhFIFVTRVJTIikNCiAgICB9DQp9KQ0K"},{"version":3,"sources":["unanswered_questions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"unanswered_questions.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-card flat>\r\n        <v-toolbar flat>\r\n            <v-toolbar-title> Unanswered Questions </v-toolbar-title>\r\n            <v-spacer></v-spacer>\r\n            <v-icon>mdi-help</v-icon>\r\n        </v-toolbar>\r\n        <v-text-field\r\n            v-model=\"search\"\r\n            append-icon=\"mdi-magnify\"\r\n            label=\"Search\"\r\n            single-line\r\n            hide-details\r\n        ></v-text-field>\r\n        <!-- na mpei search stis erwthseis -->\r\n        <v-card-text>\r\n            <v-data-table\r\n                :headers=\"computedHeaders\"\r\n                :items=\"this.questions\"\r\n                :search=\"search\"\r\n                @click:row=\"handleClick\"\r\n                style=\"cursor: pointer\"\r\n            >\r\n                <template v-slot:[`item.answers`]=\"{ item }\">\r\n                    <v-chip color=\"light-blue lighten-3\" dark>\r\n                        {{ item.answers }}\r\n                    </v-chip>\r\n                </template>\r\n                <template v-slot:[`item.votes`]=\"{ item }\">\r\n                    <v-chip color=\"deep-orange lighten-2\" dark>\r\n                        {{ item.votes }}\r\n                    </v-chip>\r\n                </template>\r\n                <template v-slot:[`item.remove`]=\"props\" v-if=\"admin\">\r\n                    <v-icon small @click=\"removeObject(props.item)\"\r\n                        >mdi-delete</v-icon\r\n                    >\r\n                </template>\r\n            </v-data-table>\r\n        </v-card-text>\r\n    </v-card>\r\n</template>\r\n<script lang=\"ts\">\r\nimport router from '@/router';\r\nimport store from '@/store';\r\nimport Vue from 'vue'\r\nimport { mapGetters } from 'vuex';\r\nimport { getQuestion, getQuestions, getUsers } from './functions'\r\nexport default Vue.extend({\r\n    data: () => ({\r\n        admin: true,\r\n        search: \"\",\r\n        questionsCols: [{ text: \"Answers\", align: 'start', sortable: true, value: 'answers' }, { text: \"Votes\", align: 'start', sortable: true, value: 'votes' }, { text: \"Question\", align: 'start', sortable: true, value: 'title' }, {\r\n            text: 'User',\r\n            align: 'start',\r\n            sortable: true,\r\n            value: 'user'\r\n        }, { text: \"id\", align: 'd-none', sortable: false, value: 'question_id' }, { text: \"\", align: 'center', sortable: false, value: 'remove' }],\r\n        questions: [] as any[],\r\n    }),\r\n    computed: {\r\n        ...mapGetters([\"getQuestions\", \"getUsers\"]),\r\n\r\n        // async questionsItems() {\r\n        //     let questions = [] as any[];\r\n        //     // console.log(value, \"value of get questions\");\r\n        //     for (const question of this.getQuestions) {\r\n        //         const questionData = await getQuestion(question.question_id);\r\n        //         const answers = questionData.answers;\r\n        //         const answersNumber = answers.length;\r\n        //         const questionObject = { answers: answersNumber, votes: \"10\", title: question.title, user: \"Ioanna\", question_id:question.question_id };\r\n        //         questions.push(questionObject);\r\n        //         console.log(questions, \"these are questions\")\r\n        //     }\r\n        //     return questions;\r\n        // },\r\n        computedHeaders() {\r\n            return this.questionsCols.filter(word => word.value !== \"question_id\")\r\n        }\r\n    },\r\n    watch: {\r\n        async getQuestions(value: any) {\r\n            let unansweredQuestionsArray = [] as any[];\r\n            console.log(value, \"value of get questions\");\r\n            const users = await getUsers();\r\n            for (const question of value) {\r\n                const questionData = await getQuestion(question.question_id);\r\n                const answers = questionData.answers;\r\n                const answersNumber = answers.length;\r\n                if (answersNumber === 0) {\r\n                    // for (const user of users) {\r\n                    //     if (user.user_id === question.UserUserId) {\r\n\r\n                    //         const questionObject = { answers: answersNumber, votes: \"12\", title: question.title, user: user.username, question_id: question.question_id };\r\n                    //         unansweredQuestionsArray.push(questionObject);\r\n                    //     }\r\n                    // }\r\n                    const votes = questionData.votes;\r\n                    const votesArray: any[] = []\r\n                    //calculate votes\r\n                    for (const vote of votes) {\r\n                        const value = vote.value\r\n                        votesArray.push(value)\r\n                    }\r\n                    //get the sum\r\n                    const votesSum = votesArray.reduce((a, b) => a + b, 0)\r\n                    const answersNumber = answers.length;\r\n                    for (const user of users) {\r\n                        if (user.user_id === question.UserUserId) {\r\n\r\n                            const questionObject = { answers: answersNumber, votes: votesSum, title: question.title, user: user.username, question_id: question.question_id };\r\n                            unansweredQuestionsArray.push(questionObject);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            console.log(unansweredQuestionsArray, \"this. questionsArray\")\r\n            this.questions = unansweredQuestionsArray;\r\n            console.log(this.questions, \"this. questions\")\r\n        },\r\n        getUsers(value: any) {\r\n            console.log(value, \"these are the users\");\r\n\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        async handleClick(value: any) {\r\n            // router.push('/question')\r\n            console.log(value, \"the value\");\r\n            const questionId = value.question_id;\r\n            this.$router.push('/question');\r\n            const questionData = await getQuestion(questionId);\r\n            console.log(questionData, \"the row data\");\r\n            store.commit(\"setQuestionData\", questionData)\r\n        },\r\n        async getUsersNames() {\r\n            const users = await getUsers();\r\n        }\r\n    },\r\n    async mounted() {\r\n        getQuestions();\r\n        this.getQuestions;\r\n        this.getUsers;\r\n        console.log(this.getUsers, \"THE USERS\")\r\n    }\r\n})\r\n</script>"]}]}