{"remainingRequest":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\question.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\question.vue","mtime":1667939216649},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoua2FwcGEgPiAucWwtY29udGFpbmVyLnFsLXNub3cgew0KICAgIC8qIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlICFpbXBvcnRhbnQ7ICovDQogICAgYm9yZGVyLXN0eWxlOiBub25lICFpbXBvcnRhbnQ7DQp9DQoua2FwcGEyID4gLnFsLWNvbnRhaW5lci5xbC1zbm93IHsNCiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZSAhaW1wb3J0YW50OyAqLw0KICAgIGJvcmRlci1zdHlsZTogbm9uZSAhaW1wb3J0YW50Ow0KfQ0KLnFsLWN1c3RvbUJ0bjIyMiB7DQogICAgYm9yZGVyOiBzb2xpZCByZWQgIWltcG9ydGFudDsNCiAgICBib3JkZXItcmFkaXVzOiAxMDAlICFpbXBvcnRhbnQ7DQp9DQo="},{"version":3,"sources":["question.vue"],"names":[],"mappingsmlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"question.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-container fluid>\r\n        <!-- The question -->\r\n        <v-card flat :key=\"fuContent\">\r\n            <v-toolbar flat class=\"ps-0\">\r\n                <v-toolbar-title class=\"ps-0\">\r\n                    {{ this.questionExample.title }}\r\n                </v-toolbar-title>\r\n\r\n                <v-spacer></v-spacer>\r\n                <!-- <v-btn small outlined rounded text> Delete Question </v-btn> -->\r\n                <v-icon>mdi-help</v-icon>\r\n            </v-toolbar>\r\n            <v-divider></v-divider>\r\n            <v-card-text>\r\n                <vue-editor\r\n                    v-if=\"!editing\"\r\n                    class=\"kappa2\"\r\n                    disabled\r\n                    v-model=\"this.questionExample.body\"\r\n                    :editorOptions=\"editorOptions\"\r\n                ></vue-editor>\r\n                <v-card v-if=\"editing\" flat style=\"border: 1px solid yellow\">\r\n                    <v-card-text>\r\n                        <vue-editor\r\n                            class=\"pt-0\"\r\n                            v-model=\"editedQuestionBody\"\r\n                            :editorOptions=\"toolbarOpts_old\"\r\n                        >\r\n                        </vue-editor>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-row justify=\"center\" align=\"center\">\r\n                            <v-col justify=\"center\" align=\"center\">\r\n                                <v-btn\r\n                                    small\r\n                                    outlined\r\n                                    color=\"teal\"\r\n                                    @click=\"updateQuestion\"\r\n                                >\r\n                                    update</v-btn\r\n                                >\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-card-actions>\r\n                </v-card>\r\n                <!-- <vue-editor\r\n                    v-if=\"editing\"\r\n                    class=\"pt-4\"\r\n                    v-model=\"editedQuestionBody\"\r\n                    :editorOptions=\"toolbarOpts_old\"\r\n                >\r\n                </vue-editor> -->\r\n                <v-row class=\"mt-15\">\r\n                    <!-- <div> -->\r\n                    <v-btn right x-large icon>\r\n                        <v-icon @click=\"upVoteQuestion\">mdi-menu-up</v-icon>\r\n                    </v-btn>\r\n                    <v-chip color=\"deep-orange lighten-2\" class=\"mt-3\">\r\n                        {{ this.questionSumVotes }}\r\n                    </v-chip>\r\n                    <!-- </div> -->\r\n                    <v-btn right x-large icon>\r\n                        <v-icon @click=\"downVoteQuestion\">mdi-menu-down</v-icon>\r\n                    </v-btn>\r\n                    <v-spacer></v-spacer>\r\n                    <span class=\"me-9\">\r\n                        <v-btn\r\n                            small\r\n                            outlined\r\n                            rounded\r\n                            text\r\n                            @click=\"editQuestion\"\r\n                        >\r\n                            EDIT Question\r\n                        </v-btn>\r\n                    </span>\r\n                    <span class=\"me-9\" v-if=\"admin\">\r\n                        <v-btn small outlined rounded text>\r\n                            Delete Question\r\n                        </v-btn>\r\n                    </span>\r\n                </v-row>\r\n            </v-card-text>\r\n            <!-- <v-row>\r\n                        <div>\r\n                            <v-chip> 12 </v-chip>\r\n                            <v-btn right large icon>\r\n                                <v-icon>mdi-chevron-up</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-spacer></v-spacer>\r\n                        <v-icon> mdi-icon </v-icon>\r\n                    </v-row> -->\r\n        </v-card>\r\n        <v-dialog v-model=\"editQuestionForm\" width=\"800\">\r\n            <v-card>\r\n                <v-card-text>\r\n                    <vue-editor\r\n                        class=\"pt-4\"\r\n                        v-model=\"editedQuestionBody\"\r\n                        :editorOptions=\"toolbarOpts_old\"\r\n                    >\r\n                    </vue-editor>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-row justify=\"center\" align=\"center\">\r\n                        <v-col justify=\"center\" align=\"center\">\r\n                            <v-btn small outlined color=\"teal\"> update</v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <!-- type an answer-->\r\n        <br />\r\n        <br />\r\n        <v-card flat>\r\n            <v-toolbar flat>\r\n                <v-toolbar-title class=\"text-body-1\"> </v-toolbar-title>\r\n                <v-spacer></v-spacer>\r\n                <v-icon>mdi-forum</v-icon>\r\n            </v-toolbar>\r\n            <v-card-text>\r\n                <v-form>\r\n                    <h3>Your Answer</h3>\r\n\r\n                    <vue-editor\r\n                        ref=\"editor2\"\r\n                        class=\"mt-3\"\r\n                        v-model=\"answerBody\"\r\n                        :editorOptions=\"toolbarOpts_old\"\r\n                    >\r\n                    </vue-editor>\r\n                </v-form>\r\n                <!-- <math-field\r\n                    v-model=\"formulaText2\"\r\n                    v-on:keyup.enter=\"pasteFormula\"\r\n                    @input=\"inputFormula\"\r\n                ></math-field> -->\r\n\r\n                <v-row>\r\n                    <div class=\"mt-8 ms-3\">\r\n                        <v-btn small outlined text @click=\"postAnswer1\">\r\n                            Post Your Answer\r\n                        </v-btn>\r\n                    </div>\r\n                    <v-spacer></v-spacer>\r\n                    <v-icon> mdi-icon </v-icon>\r\n                </v-row>\r\n            </v-card-text>\r\n        </v-card>\r\n        <!-- table with answers-->\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <v-card flat>\r\n            <v-toolbar flat>\r\n                <v-toolbar-title> Answers </v-toolbar-title>\r\n                <v-spacer></v-spacer>\r\n                <v-icon>mdi-database</v-icon>\r\n            </v-toolbar>\r\n            <v-card-text>\r\n                <v-data-table\r\n                    :headers=\"answersCols\"\r\n                    :items=\"this.answers\"\r\n                    v-if=\"admin\"\r\n                >\r\n                    <template v-slot:[`item.votes`]=\"props\">\r\n                        <v-btn right x-large icon>\r\n                            <v-icon @click=\"upVoteAnswer(props.item)\"\r\n                                >mdi-menu-up</v-icon\r\n                            >\r\n                        </v-btn>\r\n                        <v-chip color=\"deep-orange lighten-2\" class=\"mt-3\">\r\n                            <!-- {{ this.answerSumVotes }} -->{{\r\n                                props.item.votes\r\n                            }}\r\n                        </v-chip>\r\n                        <!-- </div> -->\r\n                        <v-btn right x-large icon>\r\n                            <v-icon @click=\"downVoteAnswer(props.item)\"\r\n                                >mdi-menu-down</v-icon\r\n                            >\r\n                        </v-btn>\r\n                    </template>\r\n                    <template v-slot:[`item.body`]=\"props\">\r\n                        <!-- <v-icon small @click=\"removeObject(props.item)\"\r\n                            >mdi-delete</v-icon\r\n                        > -->\r\n                        <span>\r\n                            <vue-editor\r\n                                class=\"kappa\"\r\n                                disabled\r\n                                v-model=\"props.item.body\"\r\n                                :editorOptions=\"editorOptions\"\r\n                                :style=\"editorStyle\"\r\n                            >\r\n                            </vue-editor>\r\n                        </span>\r\n                    </template>\r\n                    <template v-slot:[`item.remove`]=\"props\">\r\n                        <v-icon small @click=\"removeObject(props.item)\"\r\n                            >mdi-delete</v-icon\r\n                        >\r\n                    </template>\r\n                </v-data-table>\r\n            </v-card-text>\r\n        </v-card>\r\n    </v-container>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue, { PropType } from 'vue'\r\nimport { mapGetters } from 'vuex';\r\nimport { deleteAnswer, getAnswer, getQuestion, getUser, getUsers, postAnswer, voteAnswer, voteQuestion } from './functions';\r\nimport { question1 } from './types';\r\nimport { VueEditor } from \"vue2-editor\";\r\nimport katex from 'katex';\r\nimport 'katex/dist/katex.min.css';\r\n// import * as mathLive from \"mathlive\"\r\nimport Quill from 'quill';\r\n// Vue.use(mathLive);\r\n//declaration for katex\r\ndeclare global {\r\n    interface Window {\r\n        katex: any;\r\n    }\r\n}\r\n//\r\nexport default Vue.extend({\r\n\r\n    components: { VueEditor },\r\n    props: {\r\n        question: {\r\n            type: Object as PropType<question1>,\r\n            default: () => {\r\n                const question: question1 = { uid: '', title: \"\", body: '', userId: '' };\r\n                return question\r\n            }\r\n        }\r\n    },\r\n    data: () => ({\r\n        admin: true,\r\n        user: false, //me v if an einai o user mporei na svisei tin erwthsh tu\r\n        answerBody: \"\",\r\n        answersCols: [\r\n            {\r\n                text: 'Votes',\r\n                align: 'start',\r\n                sortable: true,\r\n                value: 'votes'\r\n            },\r\n            {\r\n                text: 'Answer',\r\n                align: 'start',\r\n                sortable: true,\r\n                value: 'body',\r\n                height: \"20%\"\r\n            },\r\n            {\r\n                text: 'User',\r\n                align: 'start',\r\n                sortable: true,\r\n                value: 'user'\r\n            },\r\n            //  {\r\n            //     text: 'Id',\r\n            //     align: 'start',\r\n            //     sortable: true,\r\n            //     value: 'answer_id'\r\n            // },\r\n\r\n            { text: \"\", align: 'center', sortable: true, value: 'remove', width: '1%' }], // na ftiaxtei typos gia tis answers\r\n        answers: [] as any[],\r\n        questionExample: {} as any, // na ftiaxtei tupos\r\n        fuContent: true,\r\n        questionSumVotes: 0,\r\n        editorOptions: {\r\n            modules: {\r\n                toolbar: false,\r\n            },\r\n            // handlers: {\r\n            //     customControl: () => {\r\n            //         console.log(\"customControl was clicked\");\r\n            //     }\r\n            // },\r\n        },\r\n        // toolbarOpts: {\r\n        toolbarOpts_old: {\r\n            modules: {\r\n                toolbar: {\r\n                    container: [\r\n                        [{ 'font': [] }],\r\n                        [{ 'header': [false, 1, 2, 3, 4, 5, 6,] }],\r\n                        [{ 'size': ['small', false, 'large', 'huge'] }],\r\n                        ['bold', 'italic', 'underline', 'strike'],\r\n                        [{ 'align': '' }, { 'align': 'center' }, { 'align': 'right' }, { 'align': 'justify' }],\r\n                        [{ 'header': 1 }, { 'header': 2 }],\r\n                        ['blockquote', 'code-block'],\r\n                        [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'list': 'check' }],\r\n                        [{ 'script': 'sub' }, { 'script': 'super' }],\r\n                        [{ 'indent': '-1' }, { 'indent': '+1' }],\r\n                        [{ 'color': [] }, { 'background': [] }],\r\n                        ['formula'],\r\n                        [{ 'direction': 'rtl' }],\r\n\r\n                        //the custom button for the formulas in order to be used with math live , math field\r\n                        // [{ 'customBtn': 'formula' }]\r\n                        // ['customBtn222']\r\n                    ],\r\n                    // \"#customToolbar\",\r\n                    // handlers: {\r\n                    //     formula:\r\n                    //         () => {\r\n                    //             console.log(\"formula was clicked222\");\r\n\r\n                    //         }\r\n                    // }\r\n                }\r\n            }\r\n            // }\r\n        },\r\n        customToolbar: [\r\n            [{ 'font': [] }],\r\n            [{ 'header': [false, 1, 2, 3, 4, 5, 6,] }],\r\n            [{ 'size': ['small', false, 'large', 'huge'] }],\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            [{ 'align': '' }, { 'align': 'center' }, { 'align': 'right' }, { 'align': 'justify' }],\r\n            [{ 'header': 1 }, { 'header': 2 }],\r\n            ['blockquote', 'code-block'],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'list': 'check' }],\r\n            [{ 'script': 'sub' }, { 'script': 'super' }],\r\n            [{ 'indent': '-1' }, { 'indent': '+1' }],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            ['link', 'image', 'video', 'formula'],\r\n            [{ 'direction': 'rtl' }],\r\n            ['clean'],\r\n            // ['ql-customBtn']\r\n        ],\r\n        editorStyle: {\r\n            \"height\": '60px',\r\n            // \"border\": \"1px solid transparent\"\r\n\r\n        },\r\n        formulaOn: false,\r\n        formulaText: \"\",\r\n        formulaText2: \"\",\r\n        answerVotes: [] as any[],\r\n        editQuestionForm: false,\r\n        editing: false,\r\n        editedQuestionBody: \"\"\r\n    }),\r\n    watch: {\r\n        question() {\r\n            this.questionExample = this.question;\r\n        },\r\n        formulaOn(value: boolean) {\r\n            console.log(value, 'The value of formula on')\r\n        },\r\n        formulaText(value: any) {\r\n            console.log(value, \"teh fprmula text\")\r\n        },\r\n        // \r\n        async getQuestionData(value: any) {\r\n            //clean answers table\r\n            const empty: any[] = []\r\n            this.answers = empty;\r\n            //\r\n            console.log(value, \"the value of question data\")\r\n            this.questionExample = {\r\n                uid: this.getQuestionData.data.question_id,//\"\",\r\n                title: this.getQuestionData.data.title,\r\n                body: this.getQuestionData.data.body,\r\n                userId: this.getQuestionData.data.UserUserId\r\n            }\r\n            // TO BE FIXED THE NAME OF USER IN ANSWERS\r\n\r\n            // for (const answer of this.getQuestionData.answers) {\r\n            //     console.log(answer, \"THE ANSWER\")\r\n\r\n            //     const userId = answer.UserUserId\r\n            //     console.log(userId, \"THE USER ID\")\r\n            //     const user = await getUser(userId);\r\n            //     console.log(user, \"THE USER\")\r\n            //     const answerObject = { body: answer.body, user: user.data.username, /*answer_id: answer.answer_id */ };\r\n            //     this.answers.push(answerObject);\r\n            // }\r\n            const users = await getUsers();\r\n            for (const answer of this.getQuestionData.answers) {\r\n                //\r\n                for (const user of users) {\r\n                    if (user.user_id === answer.UserUserId) {\r\n                        // const questionObject = { answers: answersNumber, votes: votesSum, title: question.title, user: user.username, question_id: question.question_id };\r\n                        // questionsArray.push(questionObject);\r\n                    }\r\n                    const answerObject = {\r\n                        ...answer,\r\n                        votes: await this.getAnswerVotes(answer),\r\n                        user: user.username\r\n                    }\r\n                    this.answers.push(answerObject)\r\n                }\r\n            }\r\n            // this.answers = this.getQuestionData.answers;\r\n            console.log(this.answers, \"THE ANSWERS1\")\r\n            //\r\n            const votesSum = this.getVotes()\r\n            //\r\n            this.questionSumVotes = votesSum;\r\n        },\r\n    },\r\n    computed: {\r\n        ...mapGetters([\"getQuestionData\"]),\r\n        toolbarOpts(): any {\r\n            const a = {\r\n                modules: {\r\n                    toolbar: {\r\n                        container: [\r\n                            [{ 'font': [] }],\r\n                            [{ 'header': [false, 1, 2, 3, 4, 5, 6,] }],\r\n                            [{ 'size': ['small', false, 'large', 'huge'] }],\r\n                            ['bold', 'italic', 'underline', 'strike'],\r\n                            [{ 'align': '' }, { 'align': 'center' }, { 'align': 'right' }, { 'align': 'justify' }],\r\n                            [{ 'header': 1 }, { 'header': 2 }],\r\n                            ['blockquote', 'code-block'],\r\n                            [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'list': 'check' }],\r\n                            [{ 'script': 'sub' }, { 'script': 'super' }],\r\n                            [{ 'indent': '-1' }, { 'indent': '+1' }],\r\n                            [{ 'color': [] }, { 'background': [] }],\r\n                            ['link', 'image', 'video', 'formula'],\r\n                            [{ 'direction': 'rtl' }],\r\n                            ['clean'],\r\n                        ],\r\n                        // \"#customToolbar\",\r\n                        // handlers: {\r\n                        //     formula:\r\n                        //         () => {\r\n                        //             console.log(\"formula was clicked222\");\r\n                        //             this.formulaOn = true;\r\n                        //         }\r\n                        // }\r\n                    }\r\n                }\r\n                // }\r\n            }\r\n            return a;\r\n        },\r\n    },\r\n    methods: {\r\n        async removeObject(value: any) {\r\n            console.log(value, \"th evalue of delete question\")\r\n            //\r\n            console.log(value, \"the value of remove object\")\r\n            const deleteAnswerObject = await deleteAnswer(value.answer_id);\r\n            //\r\n            // this.$router.go(0);\r\n            this.forceUpdateQuestion();\r\n        },\r\n        async forceUpdateQuestion() {\r\n            const questionId = this.getQuestionData.data.question_id;\r\n            this.$router.push('/question').catch((err: any) => {\r\n                console.warn('error in redirect to /question :', err)\r\n            });\r\n            const questionData = await getQuestion(questionId);\r\n            console.log(questionData, \"the row data\");\r\n            this.$store.commit(\"setQuestionData\", questionData)\r\n        },\r\n        forceUpdate() {\r\n            this.fuContent = !this.fuContent;\r\n        },\r\n        getVotes() {\r\n            const votesArray: any[] = []\r\n            const votes = this.getQuestionData.votes\r\n            //calculate votes\r\n            for (const vote of votes) {\r\n                const value = vote.value\r\n                votesArray.push(value)\r\n            }\r\n            //get the sum\r\n            const votesSum = votesArray.reduce((a, b) => a + b, 0)\r\n            return votesSum;\r\n        },\r\n        // getAnswerVotes0(value: any) {\r\n        //     const votes = await this.getAnswerVotes(value)\r\n        // },\r\n        async getAnswerVotes(value: any) {\r\n            const answerVotesArray: any[] = []\r\n            const answerData = await getAnswer(value.answer_id)\r\n            console.log(answerData, \"THE ANSWER DATA\")\r\n            // const votes = this.getQuestionData.votes\r\n            //calculate votes\r\n            for (const vote of answerData.answerVotes) {\r\n                const value = vote.value;\r\n                answerVotesArray.push(value)\r\n            }\r\n            //get the sum\r\n            const votesSum = answerVotesArray.reduce((a, b) => a + b, 0)\r\n            console.log(votesSum, 'teh votes of answer')\r\n            // this.answerVotes = votesSum;\r\n            return votesSum;\r\n        },\r\n        postAnswer1() {\r\n            const data = { body: this.answerBody, QuestionQuestionId: this.getQuestionData.data.question_id }\r\n            postAnswer(data); // den ananewnetai amesws h selida na fanei h apantish kai stelnei mono periorismeno airthmo leksewn,  vgazei error 500 meta\r\n            //\r\n            this.forceUpdateQuestion();\r\n            this.answerBody = \"\"\r\n\r\n        },\r\n        upVoteQuestion() {\r\n            const data = { value: 1, QuestionQuestionId: this.getQuestionData.data.question_id }\r\n            voteQuestion(data);\r\n            // \r\n            // this.$router.go(0);\r\n            this.forceUpdateQuestion();\r\n        },\r\n        downVoteQuestion() {\r\n            const data = { value: -1, QuestionQuestionId: this.getQuestionData.data.question_id }\r\n            voteQuestion(data);\r\n            //\r\n            // this.$router.go(0);\r\n            this.forceUpdateQuestion();\r\n        },\r\n        formula2(value: any) {\r\n            console.log(value, 'teh formula value')\r\n        },\r\n        editQuestion(value: any) {\r\n            console.log(value, \"the value of edited question\")\r\n            // this.editQuestionForm = true;\r\n            this.editing = true\r\n            this.editedQuestionBody = this.questionExample.body\r\n        },\r\n        updateQuestion() {\r\n            const value = { body: 1, title: this.questionExample.title, }\r\n            const questionId = this.getQuestionData.data.question_id\r\n            updateQuestion1(questionId, value);\r\n            // \r\n            // this.$router.go(0);\r\n            this.forceUpdateQuestion();\r\n        },\r\n        formulaOff() {\r\n            this.formulaOn = false;\r\n        },\r\n        async pasteFormula() {\r\n            console.log(\"click enter to paste formula\")\r\n            console.log(this.formulaText, \"the formula text on paste\")\r\n            // this.$refs.editor2?.quill.setContents([{ insert: { formula: this.formulaText } }])\r\n            await this.$nextTick()\r\n            this.formulaText2 = \" \"\r\n            this.formulaText = \" \"\r\n\r\n        },\r\n        inputFormula(value: any) {\r\n            console.log(value, \"the input value\")\r\n            console.log(value.target.getValue(\"latex-expanded\"))\r\n            this.formulaText = value.target.getValue(\"latex-unstyled\")\r\n        },\r\n        upVoteAnswer(value: any) {\r\n            console.log(value, \"value of up vote answer\");\r\n            const data = { value: 1, AnswerAnswerId: value.answer_id }\r\n            voteAnswer(data);\r\n            // \r\n            // this.$router.go(0);\r\n            this.forceUpdateQuestion();\r\n        },\r\n        downVoteAnswer(value: any) {\r\n            console.log(value, \"value of down vote answer\")\r\n            // console.log(value, \"value of up vote answer\");\r\n            const data = { value: -1, AnswerAnswerId: value.answer_id }\r\n            voteAnswer(data);\r\n            // \r\n            // this.$router.go(0);\r\n            this.forceUpdateQuestion();\r\n        }\r\n    },\r\n    mounted() {\r\n        window.katex = katex;\r\n        this.getQuestionData;\r\n        console.log(this.getQuestionData);\r\n        // const quill = new Quill('#editor', {\r\n        //     modules: {\r\n        //         toolbar:\r\n        //             [\r\n        //                 [{ header: [1, 2, false] }],\r\n        //                 ['bold', 'italic', 'underline'],\r\n        //                 ['image', 'code-block']\r\n        //             ]\r\n        //     },\r\n\r\n        // });\r\n    }\r\n})\r\n</script>\r\n<style  >\r\n.kappa > .ql-container.ql-snow {\r\n    /* border: 1px solid white !important; */\r\n    border-style: none !important;\r\n}\r\n.kappa2 > .ql-container.ql-snow {\r\n    /* border: 1px solid white !important; */\r\n    border-style: none !important;\r\n}\r\n.ql-customBtn222 {\r\n    border: solid red !important;\r\n    border-radius: 100% !important;\r\n}\r\n</style>\r\n"]}]}