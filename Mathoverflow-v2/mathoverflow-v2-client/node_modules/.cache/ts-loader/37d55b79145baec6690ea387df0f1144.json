{"remainingRequest":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\babel-loader\\lib\\index.js!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\ts-loader\\index.js??ref--14-2!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\top_voted_questions.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\top_voted_questions.vue","mtime":1665858878906},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\babel.config.js","mtime":1665858878853},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\top_voted_questions.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport router from '@/router';\r\nimport store from '@/store';\r\nimport Vue from 'vue'\r\nimport { mapGetters } from 'vuex';\r\nimport { getQuestion, getQuestions, getUsers } from './functions'\r\nexport default Vue.extend({\r\n    data: () => ({\r\n        admin: true,\r\n        search: \"\",\r\n        questionsCols: [{ text: \"Answers\", align: 'start', sortable: true, value: 'answers' }, { text: \"Votes\", align: 'start', sortable: true, value: 'votes' }, { text: \"Question\", align: 'start', sortable: true, value: 'title' }, {\r\n            text: 'User',\r\n            align: 'start',\r\n            sortable: true,\r\n            value: 'user'\r\n        }, { text: \"id\", align: 'd-none', sortable: false, value: 'question_id' }, { text: \"\", align: 'center', sortable: false, value: 'remove' }],\r\n        questions: [\r\n            // { answers: \"13\", votes: \"50\", question: \"What's an intuitive way to think about the determinant?\", user: \"Ioanna96\" },\r\n            // { answers: \"5\", votes: \"28\", question: \"Why is a ring that has only one prime helpful?\", user: \"Tolis90\" },\r\n            // { answers: \"13\", votes: \"50\", question: \"What's an intuitive way to think about the determinant?\", user: \"Ioanna96\" },\r\n            // { answers: \"13\", votes: \"50\", question: \"What's an intuitive way to think about the determinant?\", user: \"Ioanna96\" },\r\n            // { answers: \"13\", votes: \"50\", question: \"What's an intuitive way to think about the determinant?\", user: \"Ioanna96\" },\r\n            // { answers: \"13\", votes: \"50\", question: \"What's an intuitive way to think about the determinant?\", user: \"Ioanna96\" },\r\n            // { answers: \"13\", votes: \"50\", question: \"What's an intuitive way to think about the determinant?\", user: \"Ioanna96\" },\r\n            // { answers: \"13\", votes: \"50\", question: \"What's an intuitive way to think about the determinant?\", user: \"Ioanna96\" },\r\n        ] as any[],\r\n    }),\r\n    computed: {\r\n        ...mapGetters([\"getQuestions\", \"getUsers\"]),\r\n\r\n        // async questionsItems() {\r\n        //     let questions = [] as any[];\r\n        //     // console.log(value, \"value of get questions\");\r\n        //     for (const question of this.getQuestions) {\r\n        //         const questionData = await getQuestion(question.question_id);\r\n        //         const answers = questionData.answers;\r\n        //         const answersNumber = answers.length;\r\n        //         const questionObject = { answers: answersNumber, votes: \"10\", title: question.title, user: \"Ioanna\", question_id:question.question_id };\r\n        //         questions.push(questionObject);\r\n        //         console.log(questions, \"these are questions\")\r\n        //     }\r\n        //     return questions;\r\n        // },\r\n        computedHeaders() {\r\n            return this.questionsCols.filter(word => word.value !== \"question_id\")\r\n        }\r\n    },\r\n    watch: {\r\n        async getQuestions(value: any) {\r\n            let questionsArray = [] as any[];\r\n            console.log(value, \"value of get questions\");\r\n            const users = await getUsers();\r\n            for (const question of value) {\r\n                const questionData = await getQuestion(question.question_id);\r\n                const answers = questionData.answers;\r\n                const answersNumber = answers.length;\r\n                const votes = questionData.votes\r\n                const votesNumber = votes.length;\r\n                if (votesNumber !== 0 && votesNumber > 0) {\r\n                    const votesArray: any[] = []\r\n                    //calculate votes\r\n                    for (const vote of votes) {\r\n                        const value = vote.value\r\n                        votesArray.push(value)\r\n                    }\r\n                    //get the sum\r\n                    const votesSum = votesArray.reduce((a, b) => a + b, 0)\r\n                    for (const user of users) {\r\n                        if (user.user_id === question.UserUserId) {\r\n                            const questionObject = { answers: answersNumber, votes: votesSum, title: question.title, user: user.username, question_id: question.question_id };\r\n                            questionsArray.push(questionObject);\r\n                        }\r\n                    }\r\n                }\r\n                // for (const user of users) {\r\n                //     if (user.user_id === question.UserUserId) {\r\n\r\n                //         const questionObject = { answers: answersNumber, votes: \"12\", title: question.title, user: user.username, question_id: question.question_id };\r\n                //         questionsArray.push(questionObject);\r\n                //     }\r\n                // }\r\n\r\n            }\r\n            console.log(questionsArray, \"this. questionsArray\")\r\n            this.questions = questionsArray;\r\n            console.log(this.questions, \"this. questions\")\r\n        },\r\n        getUsers(value: any) {\r\n            console.log(value, \"these are the users\");\r\n\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        async handleClick(value: any) {\r\n            // router.push('/question')\r\n            console.log(value, \"the value\");\r\n            const questionId = value.question_id;\r\n            this.$router.push('/question');\r\n            const questionData = await getQuestion(questionId);\r\n            console.log(questionData, \"the row data\");\r\n            store.commit(\"setQuestionData\", questionData)\r\n        },\r\n        async getUsersNames() {\r\n            const users = await getUsers();\r\n        }\r\n    },\r\n    async mounted() {\r\n        getQuestions();\r\n        this.getQuestions;\r\n        this.getUsers;\r\n        console.log(this.getUsers, \"THE USERS\")\r\n    }\r\n})\r\n"],"sourceRoot":""}]}