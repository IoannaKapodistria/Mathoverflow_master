{"remainingRequest":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\babel-loader\\lib\\index.js!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\ts-loader\\index.js??ref--14-2!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\questions.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\questions.vue","mtime":1671304498917},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\babel.config.js","mtime":1665858878853},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\questions.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;AAgDA,OAAO,EAAP,MAAe,IAAf;AACA,OAAO,GAAP,MAAgB,KAAhB;AACA,SAAS,UAAT,QAA2B,MAA3B;AACA,SAAS,YAAT,EAAuB,cAAvB,EAAuC,WAAvC,EAAoD,YAApD,EAAkE,QAAlE,QAAkF,aAAlF;AACA,eAAe,GAAG,CAAC,MAAJ,CAAW;AACtB,EAAA,IAAI,EAAE;AAAA,WAAO;AACT,MAAA,KAAK,EAAE,IADE;AAET,MAAA,MAAM,EAAE,EAFC;AAGT,MAAA,aAAa,EAAE,CAAC;AAAE,QAAA,IAAI,EAAE,SAAR;AAAmB,QAAA,KAAK,EAAE,OAA1B;AAAmC,QAAA,QAAQ,EAAE,IAA7C;AAAmD,QAAA,KAAK,EAAE;AAA1D,OAAD,EACf;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,KAAK,EAAE,OAAxB;AAAiC,QAAA,QAAQ,EAAE,IAA3C;AAAiD,QAAA,KAAK,EAAE;AAAxD,OADe,EAEf;AAAE,QAAA,IAAI,EAAE,UAAR;AAAoB,QAAA,KAAK,EAAE,OAA3B;AAAoC,QAAA,QAAQ,EAAE,IAA9C;AAAoD,QAAA,KAAK,EAAE;AAA3D,OAFe,EAGf;AACI,QAAA,IAAI,EAAE,MADV;AAEI,QAAA,KAAK,EAAE,OAFX;AAGI,QAAA,QAAQ,EAAE,IAHd;AAII,QAAA,KAAK,EAAE;AAJX,OAHe,EASf;AAAE,QAAA,IAAI,EAAE,IAAR;AAAc,QAAA,KAAK,EAAE,QAArB;AAA+B,QAAA,QAAQ,EAAE,KAAzC;AAAgD,QAAA,KAAK,EAAE;AAAvD,OATe,EAUf;AAAE,QAAA,IAAI,EAAE,EAAR;AAAY,QAAA,KAAK,EAAE,QAAnB;AAA6B,QAAA,QAAQ,EAAE,KAAvC;AAA8C,QAAA,KAAK,EAAE;AAArD,OAVe,CAHN;AAeT,MAAA,SAAS,EAAE,CACP;AACA;AAFO,OAfF;AAmBT,MAAA,SAAS,EAAE;AAnBF,KAAP;AAAA,GADgB;AAsBtB,EAAA,QAAQ,kCACD,UAAU,CAAC,CAAC,cAAD,EAAiB,UAAjB,EAA6B,iBAA7B,CAAD,CADT;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,eAhBI,6BAgBW;AACX,aAAO,KAAK,aAAL,CAAmB,MAAnB,CAA0B,UAAA,IAAI;AAAA,eAAI,IAAI,CAAC,KAAL,KAAe,aAAnB;AAAA,OAA9B,CAAP;AACH;AAlBG,IAtBc;AA0CtB,EAAA,KAAK,EAAE;AACG,IAAA,YADH,wBACgB,KADhB,EAC0B;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrB,gBAAA,cADqB,GACJ,EADI;AAErB,gBAAA,OAFqB,GAEX,EAFW;AAGzB,gBAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,wBAAnB;AAHyB;AAAA,uBAIL,QAAQ,EAJH;;AAAA;AAInB,gBAAA,KAJmB;AAAA,uDAKF,KALE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKd,gBAAA,QALc;;AAAA,sBAOjB,QAAQ,CAAC,UAAT,KAAwB,IAPP;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQU,WAAW,CAAC,QAAQ,CAAC,WAAV,CARrB;;AAAA;AAQX,gBAAA,YARW;AASjB,gBAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,uBAA1B;AATiB,8BAWiB,KAAI,CAAC,UAAL,CAAgB,YAAhB,CAXjB;AAAA,8BAWuD,KAAI,CAAC,QAAL,CAAc,YAAd,CAXvD;AAAA,8BAW2F,QAAQ,CAAC,KAXpG;AAAA;AAAA,uBAWuH,KAAI,CAAC,WAAL,CAAiB,QAAjB,CAXvH;;AAAA;AAAA;AAAA,8BAWgK,QAAQ,CAAC,WAXzK;AAWX,gBAAA,cAXW;AAWQ,kBAAA,OAXR;AAWgD,kBAAA,KAXhD;AAWoF,kBAAA,KAXpF;AAW2G,kBAAA,IAX3G;AAWmJ,kBAAA,WAXnJ;AAAA;AAYjB,gBAAA,cAAc,CAAC,IAAf,CAAoB,cAApB;;AAZiB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAgBzB,gBAAA,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,sBAA5B;AACA,gBAAA,KAAI,CAAC,SAAL,GAAiB,cAAjB;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,SAAjB,EAA4B,iBAA5B;;AAlByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB5B,KApBE;AAqBH,IAAA,QArBG,oBAqBM,KArBN,EAqBgB;AACf,MAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,qBAAnB;AAEH;AAxBE,GA1Ce;AAsEtB,EAAA,OAAO,EAAE;AACC,IAAA,WADD,uBACa,KADb,EACuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,WAAnB;AACM,gBAAA,UAHkB,GAGL,KAAK,CAAC,WAHD;;AAIxB,gBAAA,MAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,WAAlB;;AAJwB;AAAA,uBAKG,WAAW,CAAC,UAAD,CALd;;AAAA;AAKlB,gBAAA,YALkB;AAMxB,gBAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,cAA1B;;AACA,gBAAA,MAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB,iBAAnB,EAAsC,YAAtC;;AAPwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ3B,KATI;AAUC,IAAA,aAVD,2BAUc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACK,QAAQ,EADb;;AAAA;AACT,gBAAA,KADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElB,KAZI;AAaC,IAAA,YAbD,wBAac,KAbd,EAawB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzB,gBAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,4BAAnB,EADyB,CAEzB;;AACM,gBAAA,OAHmB,GAGT,MAAI,CAAC,eAAL,CAAqB,OAHZ;;AAAA,sBAIrB,OAAO,CAAC,MAAR,KAAmB,CAJE;AAAA;AAAA;AAAA;;AAAA,wDAKA,MAAI,CAAC,eAAL,CAAqB,OALrB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKV,gBAAA,MALU;AAAA;AAAA,uBAMgB,YAAY,CAAC,MAAM,CAAC,SAAR,CAN5B;;AAAA;AAMX,gBAAA,kBANW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBASU,cAAc,CAAC,KAAK,CAAC,WAAP,CATxB;;AAAA;AASnB,gBAAA,oBATmB;;AAUzB;AACA,gBAAA,MAAI,CAAC,OAAL,CAAa,EAAb,CAAgB,CAAhB,EAXyB,CAYzB;AACA;AACA;;;AAdyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe5B,KA5BI;AA6BL,IAAA,YA7BK,0BA6BO;AACR,WAAK,SAAL,GAAiB,CAAC,KAAK,SAAvB;AACH,KA/BI;AAgCC,IAAA,aAhCD,2BAgCc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,gBAAA,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,cAAP,CAAsB,OAAtB,CAA8B,SAA9B,CAAZ,EAAsD,qBAAtD;AADe;AAAA,uBAEM,EAAE,CAClB,IADgB,CACX,oCADW,EAC2B;AACxC,kBAAA,IAAI,EAAE,MADkC;AAExC;AACA,kBAAA,WAAW,EAAE,SAH2B;AAKxC,kBAAA,OAAO,EAAE;AACL,oCAAgB;AADX,mBAL+B;AASxC,kBAAA,OAAO,EAAE;AAT+B,iBAD3B,EAYhB,IAZgB;AAAA,qFAYX,kBAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,2CACF,OADE;AAAA;AAAA,mCACuD,KAAK,CAAC,IAAN,EADvD;;AAAA;AAAA;;AAAA,yCACM,GADN,oBACU,qCADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZW;;AAAA;AAAA;AAAA;AAAA,oBAFN;;AAAA;AAEX,gBAAA,QAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBlB,KAjDI;AAkDL,IAAA,UAlDK,sBAkDM,YAlDN,EAkDuB;AACxB;AACA,UAAI,OAAO,GAAU,EAArB;;AAFwB,kDAGH,YAAY,CAAC,OAHV;AAAA;;AAAA;AAGxB,+DAA2C;AAAA,cAAhC,MAAgC;;AACvC,cAAI,MAAM,CAAC,UAAP,KAAsB,IAA1B,EAAgC;AAC5B,YAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACH;AACJ;AAPuB;AAAA;AAAA;AAAA;AAAA;;AAQxB,MAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,gBAArB;AACA,aAAO,OAAO,CAAC,MAAf;AACH,KA5DI;AA6DL,IAAA,QA7DK,oBA6DI,YA7DJ,EA6DqB;AACtB;AACA,UAAM,KAAK,GAAG,YAAY,CAAC,KAA3B;AACA,UAAM,UAAU,GAAU,EAA1B,CAHsB,CAItB;;AAJsB,kDAKH,KALG;AAAA;;AAAA;AAKtB,+DAA0B;AAAA,cAAf,IAAe;AACtB,cAAM,KAAK,GAAG,IAAI,CAAC,KAAnB;AACA,UAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;AACH,SARqB,CAStB;;AATsB;AAAA;AAAA;AAAA;AAAA;;AAUtB,UAAM,QAAQ,GAAG,UAAU,CAAC,MAAX,CAAkB,UAAC,CAAD,EAAI,CAAJ;AAAA,eAAU,CAAC,GAAG,CAAd;AAAA,OAAlB,EAAmC,CAAnC,CAAjB;AACA,aAAO,QAAP;AACH,KAzEI;AA0EC,IAAA,WA1ED,uBA0Ea,QA1Eb,EA0E0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEP,QAAQ,EAFD;;AAAA;AAErB,gBAAA,KAFqB;AAG3B;AACA;AACM,gBAAA,KALqB,GAKb,KAAK,CAAC,SAAN,CAAgB,UAAC,EAAD;AAAA,yBAAa,EAAE,CAAC,OAAH,KAAe,QAAQ,CAAC,UAArC;AAAA,iBAAhB,CALa;;AAAA,sBAMvB,KAAK,KAAK,CAAC,CANY;AAAA;AAAA;AAAA;;AAOjB,gBAAA,QAPiB,GAON,KAAK,CAAC,KAAD,CAAL,CAAa,QAPP;AAAA,kDAQhB,QARgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY9B;AAtFI,GAtEa;AA8JhB,EAAA,OA9JgB,qBA8JT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACH,YAAY,EADT;;AAAA;AAET,cAAA,MAAI,CAAC,YAAL;AACA,cAAA,MAAI,CAAC,QAAL;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,QAAjB,EAA2B,WAA3B;;AAJS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKZ;AAnKqB,CAAX,CAAf","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport router from '@/router';\r\nimport store from '@/store';\r\nimport ky from 'ky';\r\nimport Vue from 'vue'\r\nimport { mapGetters } from 'vuex';\r\nimport { deleteAnswer, deleteQuestion, getQuestion, getQuestions, getUsers } from './functions'\r\nexport default Vue.extend({\r\n    data: () => ({\r\n        admin: true,\r\n        search: \"\",\r\n        questionsCols: [{ text: \"Answers\", align: 'start', sortable: true, value: 'answers' },\r\n        { text: \"Votes\", align: 'start', sortable: true, value: 'votes' },\r\n        { text: \"Question\", align: 'start', sortable: true, value: 'title' },\r\n        {\r\n            text: 'User',\r\n            align: 'start',\r\n            sortable: true,\r\n            value: 'user'\r\n        },\r\n        { text: \"id\", align: 'd-none', sortable: false, value: 'question_id' },\r\n        { text: \"\", align: 'center', sortable: false, value: 'remove' }\r\n        ],\r\n        questions: [\r\n            // { answers: \"13\", votes: \"50\", question: \"What's an intuitive way to think about the determinant?\", user: \"Ioanna96\" },\r\n            // { answers: \"5\", votes: \"28\", question: \"Why is a ring that has only one prime helpful?\", user: \"Tolis90\" },\\\r\n        ] as any[],\r\n        fuContent: false\r\n    }),\r\n    computed: {\r\n        ...mapGetters([\"getQuestions\", \"getUsers\", \"getQuestionData\"]),\r\n\r\n        // async questionsItems() {\r\n        //     let questions = [] as any[];\r\n        //     // console.log(value, \"value of get questions\");\r\n        //     for (const question of this.getQuestions) {\r\n        //         const questionData = await getQuestion(question.question_id);\r\n        //         const answers = questionData.answers;\r\n        //         const answersNumber = answers.length;\r\n        //         const questionObject = { answers: answersNumber, votes: \"10\", title: question.title, user: \"Ioanna\", question_id:question.question_id };\r\n        //         questions.push(questionObject);\r\n        //         console.log(questions, \"these are questions\")\r\n        //     }\r\n        //     return questions;\r\n        // },\r\n        computedHeaders(): any {\r\n            return this.questionsCols.filter(word => word.value !== \"question_id\")\r\n        }\r\n    },\r\n    watch: {\r\n        async getQuestions(value: any) {\r\n            let questionsArray = [] as any[];\r\n            let answers = [] as any[];\r\n            console.log(value, \"value of get questions\");\r\n            const users = await getUsers();\r\n            for (const question of value) {\r\n                //if user id !== null\r\n                if (question.UserUserId !== null) {\r\n                    const questionData = await getQuestion(question.question_id)\r\n                    console.log(questionData, \"value of questionData\");\r\n\r\n                    const questionObject = { answers: this.getAnswers(questionData), votes: this.getVotes(questionData), title: question.title, user: await this.getUsername(question), question_id: question.question_id };\r\n                    questionsArray.push(questionObject);\r\n                }\r\n                //\r\n            }\r\n            console.log(questionsArray, \"this. questionsArray\")\r\n            this.questions = questionsArray;\r\n            console.log(this.questions, \"this. questions\")\r\n        },\r\n        getUsers(value: any) {\r\n            console.log(value, \"these are the users\");\r\n\r\n        }\r\n    },\r\n\r\n\r\n    methods: {\r\n        async handleClick(value: any) {\r\n            // router.push('/question')\r\n            console.log(value, \"the value\");\r\n            const questionId = value.question_id;\r\n            this.$router.push('/question');\r\n            const questionData = await getQuestion(questionId);\r\n            console.log(questionData, \"the row data\");\r\n            this.$store.commit(\"setQuestionData\", questionData)\r\n        },\r\n        async getUsersNames() {\r\n            const users = await getUsers();\r\n        },\r\n        async removeObject(value: any) {\r\n            console.log(value, \"the value of remove object\")\r\n            //when delete question delete all its answers\r\n            const answers = this.getQuestionData.answers\r\n            if (answers.length !== 0) {\r\n                for (const answer of this.getQuestionData.answers) {\r\n                    const deleteAnswerObject = await deleteAnswer(answer.answer_id);\r\n                }\r\n            }\r\n            const deleteQuestionObject = await deleteQuestion(value.question_id);\r\n            //\r\n            this.$router.go(0);\r\n            // this.$router.push('/').catch((err: any) => {\r\n            //     console.warn('error in deletion of question, the error:', err)\r\n            // });\r\n        },\r\n        forceUpdate2() {\r\n            this.fuContent = !this.fuContent;\r\n        },\r\n        async sessionCheck1() {\r\n            console.log(window.sessionStorage.getItem(\"session\"), \"the session storage\")\r\n            let response = await ky\r\n                .post(\"http://localhost:3000/sessionCheck\", {\r\n                    mode: \"cors\",\r\n                    // credentials: \"same-origin\",\r\n                    credentials: \"include\",\r\n\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                    },\r\n\r\n                    timeout: false,\r\n                })\r\n                .then(async (value: any) => {\r\n                    console.log(\"this is the value of session check:\", await value.text());\r\n                });\r\n        },\r\n        getAnswers(questionData: any) {\r\n            //\r\n            let answers: any[] = []\r\n            for (const answer of questionData.answers) {\r\n                if (answer.UserUserId !== null) {\r\n                    answers.push(answer)\r\n                }\r\n            }\r\n            console.log(answers, \"the answers222\")\r\n            return answers.length;\r\n        },\r\n        getVotes(questionData: any) {\r\n            //\r\n            const votes = questionData.votes;\r\n            const votesArray: any[] = []\r\n            //calculate votes\r\n            for (const vote of votes) {\r\n                const value = vote.value\r\n                votesArray.push(value)\r\n            }\r\n            //get the sum\r\n            const votesSum = votesArray.reduce((a, b) => a + b, 0)\r\n            return votesSum;\r\n        },\r\n        async getUsername(question: any) {\r\n            //\r\n            const users = await getUsers()\r\n            // for (const user of users) {\r\n            // if (user.user_id === questionData.UserUserId) {\r\n            const index = users.findIndex((el: any) => el.user_id === question.UserUserId)\r\n            if (index !== -1) {\r\n                const username = users[index].username\r\n                return username\r\n            }\r\n            // }\r\n            // }\r\n        }\r\n    },\r\n    async mounted() {\r\n        await getQuestions();\r\n        this.getQuestions;\r\n        this.getUsers;\r\n        console.log(this.getUsers, \"THE USERS\")\r\n    }\r\n})\r\n"],"sourceRoot":""}]}