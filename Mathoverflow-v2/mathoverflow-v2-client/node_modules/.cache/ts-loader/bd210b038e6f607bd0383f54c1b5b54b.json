{"remainingRequest":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\babel-loader\\lib\\index.js!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\ts-loader\\index.js??ref--14-2!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\user.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\user.vue","mtime":1671304499639},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\babel.config.js","mtime":1665858878853},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\master_projects\\Mathoverflow_master\\Mathoverflow-v2\\mathoverflow-v2-client\\src\\components\\user.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport { deleteAnswer, deleteQuestion, getQuestion, getUser, isLogged, removeUser } from './functions';\r\nimport { mapGetters } from 'vuex';\r\nimport store from '@/store';\r\nimport { VueEditor } from \"vue2-editor\";\r\nimport katex from 'katex';\r\nimport 'katex/dist/katex.min.css';\r\nexport default Vue.extend({\r\n    components: { VueEditor },\r\n    data: () => ({\r\n        answersCols: [{\r\n            text: 'Answer',\r\n            align: 'start',\r\n            sortable: true,\r\n            value: 'body'\r\n        },\r\n        // {\r\n        //     text: 'User',\r\n        //     align: 'start',\r\n        //     sortable: true,\r\n        //     value: 'user'\r\n        // },\r\n        { text: \"\", align: 'center', sortable: false, value: 'remove' }],\r\n        answers: [\r\n            // { body: \"In order to find the solutions of the system of conics you mention, it suffices to give a procedure to find the projection of the simultaneous vanishing set of the two conics onto some axis, for instance, the y-axis: the coordinates of the projection onto the y-axis are the y-coordinates of the intersection points. Knowing them allows you to substitute back into the equations the values of y \", }, { body: \"In order to find the \" }\r\n        ] as any[],\r\n        questionsCols: [\r\n            { text: \"Answers\", align: 'start', sortable: true, value: 'answers' },\r\n            { text: \"Votes\", align: 'start', sortable: true, value: 'votes' },\r\n            { text: \"Question\", align: 'start', sortable: true, value: 'title' },\r\n            // { text: \"Question Id\", align: 'start', sortable: true, value: 'question_id' },\r\n            // {\r\n            //     text: 'User',\r\n            //     align: 'start',\r\n            //     sortable: true,\r\n            //     value: 'user'\r\n            // }, \r\n            { text: \"\", align: 'center', sortable: false, value: 'remove' }\r\n        ],\r\n        questions: [\r\n            // { answers: \"13\", votes: \"50\", question: \"What's an intuitive way to think about the determinant?\" }, \r\n            // { answers: \"5\", votes: \"28\", question: \"Why is a ring that has only one prime helpful?\" }\r\n        ] as any[],\r\n        admin: true,\r\n        user: {} as any,\r\n        editorOptions: {\r\n            modules: {\r\n                toolbar: false,\r\n            },\r\n        },\r\n        editorStyle: {\r\n            \"height\": '60px',\r\n            // \"border\": \"1px solid transparent\"\r\n\r\n        }\r\n    }),\r\n    watch: {\r\n        getUserData(value: any) {\r\n            console.log(value, \"the value of user data\")\r\n            this.user = {\r\n                uid: value.data.user_id,\r\n                username: value.data.username,\r\n                email: value.data.email, //\"In my attempts to understand just how computer algebra systems , I tried to dig around a bit on Gröbner bases, which are described almost everywhere as a generalization of the Euclidean algorithm and Gaussian elimination. I've tried to look for examples of Gröbner bases in action,\",\r\n                created: value.data.createdAt\r\n            },\r\n                this.questions = value.questions;\r\n            this.answers = value.answers;\r\n        },\r\n    },\r\n    computed: {\r\n        ...mapGetters([\"getUserData\", \"getQuestions\"])\r\n    },\r\n    methods: {\r\n        async getUserData1() {\r\n            const isLoggedIn = await isLogged();\r\n            // const user = await getUser();\r\n        },\r\n        async getQuestions2() {\r\n            for (const question of this.getUserData.questions) {\r\n                const questionData = await getQuestion(question.question_id);\r\n                const answers = questionData.answers;\r\n                const answersNumber = answers.length;\r\n                //\r\n                const votes = questionData.votes;\r\n                const votesArray: any[] = []\r\n                //calculate votes\r\n                for (const vote of votes) {\r\n                    const value = vote.value\r\n                    votesArray.push(value)\r\n                }\r\n                //get the sum\r\n                const votesSum = votesArray.reduce((a, b) => a + b, 0)\r\n                //\r\n                const questionObject = { answers: answersNumber, votes: votesSum, title: question.title, question_id: question.question_id };\r\n                this.questions.push(questionObject);\r\n            }\r\n        },\r\n        async handleClick(value: any) {\r\n            // router.push('/question')\r\n            console.log(value, \"the value\");\r\n            const questionId = value.question_id;\r\n            this.$router.push('/question');\r\n            const questionData = await getQuestion(questionId);\r\n            console.log(questionData, \"the row data\");\r\n            store.commit(\"setQuestionData\", questionData)\r\n        },\r\n        async clickAnswer(value: any) {\r\n            console.log(value, \"the answer value\")\r\n            //\r\n            const questionId = value.QuestionQuestionId;\r\n            this.$router.push('/question');\r\n            const questionData = await getQuestion(questionId);\r\n            console.log(questionData, \"the row data\");\r\n            store.commit(\"setQuestionData\", questionData)\r\n        },\r\n        async deleteUser() {\r\n            // console.log(value, \"the value of delete user\")\r\n            //when delete user delete all his questions and answers\r\n            const questions = this.getQuestions\r\n            for (const question of questions) {\r\n                if (question.UserUserId === this.user.uid) {\r\n                    const questionData = await getQuestion(question.question_id);\r\n                    const answers = questionData.answers;\r\n                    if (answers.length !== 0) {\r\n                        for (const answer of questionData.answers) {\r\n                            //delete user's answers\r\n                            const deleteAnswerObject = await deleteAnswer(answer.answer_id);\r\n                        }\r\n                    }\r\n                    //delete the user's questions\r\n                    const deleteQuestion1 = await deleteQuestion(question.question_id)\r\n                }\r\n            }\r\n            //and then delete user\r\n            const deleteUserObject = await removeUser(this.user.uid);\r\n            // set timeout???\r\n            this.$router.push('/users').catch((err: any) => {\r\n                console.warn('error in redirect to /users :', err)\r\n            });\r\n        }\r\n    },\r\n    mounted() {\r\n        window.katex = katex;\r\n\r\n        this.getUserData1();\r\n        this.getUserData;\r\n        console.log(this.getUserData, \"USERDATA\")\r\n        this.user = {\r\n            uid: this.getUserData.data.user_id,\r\n            username: this.getUserData.data.username,\r\n            email: this.getUserData.data.email, //\"In my attempts to understand just how computer algebra systems , I tried to dig around a bit on Gröbner bases, which are described almost everywhere as a generalization of the Euclidean algorithm and Gaussian elimination. I've tried to look for examples of Gröbner bases in action,\",\r\n            created: this.getUserData.data.createdAt\r\n        },\r\n            this.getQuestions2();\r\n        // this.questions = this.getUserData.questions;\r\n        this.answers = this.getUserData.answers;\r\n\r\n    }\r\n})\r\n"],"sourceRoot":""}]}